input {
  http {
    host => "0.0.0.0"
    port => 5000
    response_headers => {
      "Access-Control-Allow-Origin" => "*"
      "Access-Control-Allow-Headers" => "Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With"
      "Access-Control-Allow-Methods" => "*"
      "Access-Control-Allow-Credentials" => "*"
    }
  }
}

filter {
  grok {
    patterns_dir => ["./patterns/grok-patterns"]
    match => { "message" => "^\[%{TIMESTAMP_ISO8601:ts}\]%{WORD:severity}@%{WORD:hostname}\(%{VERSION:version}\): %{GREEDYDATA:logEntry}" }
#     #add_tag => [ "tagToAddSample" ]
#     #remove_tag => [ "tagToRemoveSample" ]
  }
  mutate {
    remove_field => ["message", "host", "headers"]
  }
}

output {
	elasticsearch {
		hosts => ["elasticsearch:9200"]
    template => "/usr/share/logstash/template/template.json"
    index => "labmanager-%{+YYYY.MM.dd}"
	}
  stdout {
    codec => rubydebug
  }
}
